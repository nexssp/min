const{minify:minify}=require("terser"),fs=require("fs").promises,{error:error}=require("@nexssp/logdebug"),file=async(e,r,s)=>{const o=await fs.readFile(e).catch((e=>console.error(e)));if(o){const t=o.toString(),i=await minify(t,s),n=e.replace("./src/",r);e===n&&(error("You cannnot overwrite files with @nexssp/min."),process.exit(1));const c=require("path").dirname(n);require("fs").existsSync(c)||await fs.mkdir(c);const a=100-i.code.length/o.length*100,l=Math.round(a,2);return await fs.writeFile(n,i.code),{file:e,dest:n,length:t.length,compressed:{percentage:l,length:i.code.length}}}console.log(`File can't be converted: ${e}`),process.exitCode=1},compress=async(e="./src/",r="./dist/",s={})=>{if(s.glob=s.glob||"**/*.js",e.endsWith("/")||e.endsWith("\\")||(error("Source folder must contain at the end '/' eg: ./src/"),process.exit(1)),r.includes("src/")&&(error("You cannot overwrite your source files. Change source to something different then ./src/ or src/"),process.exit(1)),r.endsWith("/")||r.endsWith("\\")||(error("Dist folder must contain at the end '/' eg: ./dist/"),process.exit(1)),e!==r){const o=require("fast-glob"),t=`${e}${s.glob}`.replace(/\\/g,"/"),i=await o([t]);return await Promise.all(i.map((async e=>file(`${e}`,r))))}error("You cannnot overwrite files. You could lost your work. Change destination folder name."),process.exit(1)};module.exports={file:file,compress:compress};